CREATE CONSTRAINT ON ( project:Project ) ASSERT (project.neo4jImportId) IS UNIQUE;
CREATE CONSTRAINT ON ( package:Package ) ASSERT (package.neo4jImportId) IS UNIQUE;
CREATE CONSTRAINT ON ( block:Block ) ASSERT (block.neo4jImportId) IS UNIQUE;
CREATE CONSTRAINT ON ( port:Port ) ASSERT (port.neo4jImportId) IS UNIQUE;
CREATE CONSTRAINT ON ( pin:Pin ) ASSERT (pin.neo4jImportId) IS UNIQUE;
CREATE CONSTRAINT ON ( model:Model ) ASSERT (model.neo4jImportId) IS UNIQUE;
CREATE CONSTRAINT ON ( actor:Actor ) ASSERT (actor.neo4jImportId) IS UNIQUE;
CREATE CONSTRAINT ON ( usecase:UseCase ) ASSERT (usecase.neo4jImportId) IS UNIQUE;
CREATE CONSTRAINT ON ( simulinkblock:SimulinkBlock ) ASSERT (simulinkblock.neo4jImportId) IS UNIQUE;
CREATE CONSTRAINT ON ( structuredsimulinkblock:StructuredSimulinkBlock ) ASSERT (structuredsimulinkblock.neo4jImportId) IS UNIQUE;
CREATE CONSTRAINT ON ( bdddiagram:BDDDiagram ) ASSERT (bdddiagram.neo4jImportId) IS UNIQUE;
CREATE CONSTRAINT ON ( activitydiagram:ActivityDiagram ) ASSERT (activitydiagram.neo4jImportId) IS UNIQUE;
CREATE CONSTRAINT ON ( requirementdiagram:RequirementDiagram ) ASSERT (requirementdiagram.neo4jImportId) IS UNIQUE;
CREATE CONSTRAINT ON ( statemachinediagram:StateMachineDiagram ) ASSERT (statemachinediagram.neo4jImportId) IS UNIQUE;
CREATE CONSTRAINT ON ( sequencediagram:SequenceDiagram ) ASSERT (sequencediagram.neo4jImportId) IS UNIQUE;
CREATE CONSTRAINT ON ( usecasediagram:UseCaseDiagram ) ASSERT (usecasediagram.neo4jImportId) IS UNIQUE;
CREATE CONSTRAINT ON ( requirement:Requirement ) ASSERT (requirement.neo4jImportId) IS UNIQUE;


-- Show Constraints